----------------------------------------------------------------------------
                        - あふｗ -  設定プログラム
                               AFxWCFG.EXE
----------------------------------------------------------------------------
                                                        2018.12.12  ＡＫＴ

● 概要 ●

  このプログラム（AFxWCFG.EXE）は【あふｗ】（AFxW.EXE）の設定を行うものです。


● 起動 ●

  【あふｗ】から Ｚキー を押す事によって起動されます。


● 注意 ●

  【あふｗ】を起動中に「Ｚキー以外」で設定プログラム（AFxWCFG.EXE）を
  起動して設定を変更しても【あふｗ】を終了すると大部分の項目が前の設定で
  上書きされてしまいます。

  【あふｗ】を起動していない時に設定プログラム（AFxWCFG.EXE）を起動して
  設定を変更した場合は、次回【あふｗ】を起動した時に反映されます。


● 設定方法 ●
----------------------------------------------------------------------------
                           「各種設定(1)」タブ
----------------------------------------------------------------------------
  ■一般

    「あふｗをESCキーでも終了する」
        ファイル操作待ち状態の時に ESC キーを押した場合でも【あふｗ】を
        終了します。

    「似非マウス操作モードを使用する」
        常に似非マウス操作モードを使用可能にします。

    「最小化時はタスクトレイへ」
        【あふｗ】を最小化した時タスクトレイに入ります。
        タスクトレイのアイコンを左クリックするか、設定してある場合は
        ホットキーで復帰出来ます。

    「起動時ファイルマスクは必ず *.* にする」
        起動時に左右のファイル窓のマスク設定を *.* に設定します。
        未チェック時は、以前の【あふｗ】終了時のファイルマスクが
        引き継がれます。

    「ファイルの検索は常に部分一致を適用する」
        ファイル・フォルダの検索時に指定した文字列に一部でもファイル名が
        一致したファイルを報告します。
        未チェック時は、指定した文字列にファイル名が完全に一致した
        ファイルのみを報告します。

    「インクリメンタルサーチは常に部分一致を適用する」
        インクリメンタルサーチ時、指定した文字列にファイル名の一部でも
        一致したファイルにカーソルを合わせます。
        未チェック時は、指定した文字列にファイル名の先頭部分が一致した
        ファイルのみにカーソルを合わせます。

    「メニューは頭文字のキーで即決定する」
        各種メニューで表示されている項目の頭文字のキーを押すとその項目が
        決定されます。
        ただしこの場合でも CTRLキー を押しながら頭文字のキーを押した時は
        決定されずにその頭文字の項目に飛びます。
        未チェック時は、常にその頭文字の項目に飛ぶのみとなります。

    「フォルダ履歴でダイレクトジャンプを使用する」
        フォルダ履歴の一覧で上位項目の先頭に数字・英字が表示され
        そのキーで選択決定が出来ます。
        未チェック時は、先頭文字（ドライブ名）の順次選択になります。

    「前回終了時のフォルダ履歴を保存して引き継ぐ」
        前回終了時のフォルダ履歴を次に起動した時に引き継ぎます。
        未チェック時は、起動毎にフォルダ履歴はリセットされますが
        【あふｗ】の起動が少し早くなります。

    「前回終了時の変数（$0〜$9）を保存して引き継ぐ」
        置換マクロのユーザー変数 $0〜$9 を次に起動した時に引き継ぎます。

    「タイトルバーに現在のパスとマスクを表示する」
        タイトルバーに自ファイル窓のパスとマスクを表示します。

    「あふｗをもう一枚開く（ALT+Ｚキー）前に設定を保存する」
        ALT+Ｚキーで【あふｗ】をもう一枚開く直前に設定ファイルを
        更新して、引き継ぐ設定を増やします。

  ■ファイル窓とステータスバー表示

    「ファイル名ソートは Win2k 以前の Explorer 互換」
        ファイル名でのソート順が Win2k 以前の Explorer と同等になります。

    「ソート状態を表示する」
        ソートの状態を残り容量等表示の右側に表示します。
        表示の意味は内部命令 &SORT の解説を御覧ください。

    「ファイル窓のスクロールバーを表示しない」
        ファイル窓のスクロールバーを非表示にします。
        非表示にした場合はスクロールバー領域も使用してファイル情報を
        表示します。

    「サイズ変更時常に左右ファイル窓を同サイズにする」
        起動時や【あふｗ】のサイズ変更時に自動的に左右のファイル窓の境界を
        中央にセットします。

    「フォルダ Recycler（ごみ箱）を表示しない」
        ごみ箱の実フォルダである、ルートフォルダ上の Recycler, $Recycle.bin
        を表示しなくなります。

    「フォルダ System Volume Information を表示しない」
        ボリューム情報フォルダ System Volume Information を
        表示しなくなります。

    「システム属性ファイルを表示しない」
        システム属性のファイル・フォルダを表示しなくなります。

    「隠し属性ファイルを表示しない」
        隠し属性のファイル・フォルダを表示しなくなります。

    「ファイルサイズを KB MB GB TB 表示する」
        ファイル窓でのファイルサイズ表示をサイズによって KB MB GB TB で
        表示します。

    「ファイルサイズを3桁コンマ区切り表示する」
        上の項目が未チェック時に、ファイル窓でのファイルサイズ表示を
        3桁ごとにコンマで区切って表示します。

    「タイムスタンプの秒表示を省略する」
        ファイル窓でのタイムスタンプ表示の秒部分表示を省略します。

    「１列表示時もステータスバーにファイル名を表示する」
        ファイル窓が１列表示の時にもステータスバーにファイル名などの
        情報を表示します。
        表示されるタイミングはカーソルを動かした時です。
        タイトル表示可能な拡張子の場合はタイトル表示が優先します。

    「ステータスバーにデータファイルのタイトルを表示する」
        【あふｗ】の認識出来るデータファイルのタイトルをステータスバーに
        表示します。

  ■ファイル窓動作

    「拡張子判別実行終了時デフォルトでカーソルを下げない」
        拡張子判別実行の後デフォルト設定ではカーソルを１つ下げなく
        なります。

    「ファイル窓の最上下位置でカーソルループする」
        ファイル窓の１番上にカーソルがある時更に上で１番下に、１番下に
        カーソルがある時更に下で１番上にカーソルを移動します。
        カーソルキーのみ有効で PageUp PageDown キー等ではループしません。

    「左右逆カーソルで親フォルダに移動する」
        左ファイル窓にカーソルがある時に左カーソルキー、また
        右ファイル窓にカーソルがある時に右カーソルキーを押すと
        親フォルダへ移動出来るようになります。

    「ルートフォルダから BS キーでドライブ選択を開く」
        ルートフォルダから更に親フォルダへ移動しようとすると
        ドライブ選択ウインドウを開きます。

    「フォルダを抜ける時にカーソル位置を記憶する」
        フォルダを抜ける時のカーソル位置を記憶し、再びそのフォルダに
        入った時その位置にカーソルを置きます。

    「フォルダ作成後そのフォルダ内に移動する」
        フォルダの作成後そのフォルダ内に移動します。

    「参照フォルダの変更時フォルダは必ず中に移動する」
        参照フォルダの変更ダイアログで、フォルダを指定した場合は
        末尾 \ の有無に関係なく中に移動します。

    「ショートカットはリンク先を参照する」
        拡張子判別実行時、拡張子が『.lnk』のショートカットファイルは
        リンク先を参照しにいきます。
        ファイルの複写・移動・削除・改名などは、そのショートカット
        ファイル自身に対して行われます。

  ■ファイル操作

    「複写・移動時にフォルダのタイムスタンプを保持する」
        複写（移動）時にフォルダのタイムスタンプを複写（移動）元の
        タイムスタンプに合わせます。

    「通常の削除はごみ箱を使用する」
        デフォルトの削除キーが『ごみ箱へ投棄』
        SHIFT を押しながら削除キーで『削除』になります。

        エクスプローラと同じく、リムーバブルメディア等でごみ箱を
        使用した場合は即削除されますので御注意ください。

    「ごみ箱はシステムの確認を利用する」
        ごみ箱へ投棄時の確認ダイアログをシステム任せにします。
        チェックしなかった場合は自前のダイアログを使用します。

    「分割時に拡張子を残す」
        ファイル分割後のファイル名に元ファイルの拡張子を残します。
        例えば FILE.DAT を分割した場合、この項目にチェック時は
           FILE.DAT.000
           FILE.DAT.001
           FILE.DAT.002
                …
        未チェック時は
           FILE.000
           FILE.001
           FILE.002
              …
        と、なります。

    「完了時や入力待ち時に無フォーカスならタスクバーを点滅させる」
        ファイル操作の完了時や途中問い合わせがあった時、【あふｗ】が
        フォーカスを持っていなかった場合はタスクバーの【あふｗ】
        ボタンを点滅させます。

    「完了時や入力待ち時に最小化されていたら元に戻す」
        ファイル操作の完了時や途中問い合わせがあった時、【あふｗ】が
        最少化されていた場合は【あふｗ】ウインドウを元に戻します。

     上記２つの『完了時』を監視するファイル操作は『各種登録(9)』の
     『サウンド』項目に存在する操作です。

  ■ドライブ選択

    「メニューにデスクトップを追加する」
        ドライブ選択ウインドウに Desktop の項目が現れ
        デスクトップフォルダを選択出来るようになります。

    「メニューにマイドキュメントを追加する」
        ドライブ選択ウインドウに My Doc. の項目が現れ
        マイドキュメントフォルダを選択出来るようになります。

    「ボリュームラベルを常に表示する」
        ドライブ選択ウインドウで常にボリュームラベルを表示します。
        未チェックでボリュームラベル非表示の場合でも
        ドライブ選択ウインドウで SPACEキー を押すとボリュームラベルを
        表示出来ます。

    「FDDの種類を判別する」
        ドライブ選択ウインドウでリムーバブルドライブが FDD かどうかを
        チェックします。

    「FDDもボリュームラベルを表示する」
        ドライブ選択ウインドウで FDD もボリューム名を表示します。
        しかし普通の FDD を使用している場合はガリガリ音が鳴る場合が
        あります。
        SuperDisk（旧称 LS-120）等を使用している場合は問題ありません。

  ■書庫

    「展開はフォルダを作成してその中へ」
        書庫を展開する際に書庫のファイル名主部と同じ名前のフォルダを
        作成し、その中に展開します。

    「仮想フォルダのファイルマスクは必ず *.* にする」
        書庫の仮想フォルダ内のみ必ずファイルマスクを自動的に *.* にします。

    「ZIP の展開操作は 7-ZIP32/64.DLL を最優先して使用する」
        ZIP書庫の仮想フォルダ・展開操作等を 7-ZIP32/64.DLL を優先して
        使用します。
        なお、圧縮操作で使用する DLL は圧縮時に選択出来ます。

    「LMZIP32/64.dll を使用する」
        LMZIP32/64.dll を用いた展開や仮想フォルダを有効にします。

    「XacRett.DLL を使用する」
        XacRett.DLL を用いた展開や仮想フォルダを有効にします。
        XacRett.DLL は XacRett.DLL 付属のドキュメントを
        熟読の上で御使用ください。

  ■キー操作

    「TF.x for X68K 互換キーモードを使用する」
        １部の操作キーが変更されます。
        手が勝手に動いてしまう方はどうぞ :-)
                 Ｄ ..... ドライブ変更
           SHIFT+Ｄ ..... 共有フォルダ列挙
                 Ｋ ..... 削除
                 Ｌ ..... テキストビュア
                 Ｍ ..... マークがあれば移動
                          マークがなければフォルダの作成

    「101キーモードを使用する」
        １部の操作キーが変更されます。
                 ／ ..... コンテキストメニュー
           SHIFT+／ ..... 右 D&D シミュレート
             ALT+／ ..... ファイル名クリップボード転送メニュー
                 ］ ..... DLL 等のバージョン表示

         他の '_'（アンダーバー）キーが必要な場面でも '/'（スラッシュ）
         キーで代用出来るようになります。

    「DELETEキーは削除キーとして使用する」
        DELETEキーが削除キーとして使えます。
        ただしファイル窓とメッセージ窓のフォントサイズ増減は出来なく
        なります。

  ■画像とテキストビュア

    「テキストビュア表示時はメッセージ窓部分も使用する」
        簡易内蔵テキストビュア表示の際にメッセージ窓部分も使用します。

    「スライドショーモードの時はスペースキーでマークしない」
        画像閲覧のスライドショーモードの時に SPACEキー を押しても
        マークせず次のファイルに移ります。
        単に SPACEキー で次々画像を見たい場合に有効です。

    「内蔵画像ビュアで見た画像をあふｗの壁紙にする」
        内蔵画像ビュアで表示した画像を自動的に現在の【あふｗ】の壁紙とします。
        ただし画像ビュアを ESC キーで抜けた場合は壁紙を変更しません。

        ちなみに起動時の壁紙設定は【あふｗ】本体で行います。
        （画像表示中にアンダーバーキーを押したメニューの中です）

    「あふｗの壁紙をセンタリングする」
        【あふｗ】の壁紙画像の中心がファイル窓の中心に位置するよう配置します。
        （Ｘ座標のみ）

    「あふｗの壁紙を左右ぶち抜きモードにする」
        【あふｗ】の壁紙を左右のファイル窓にまたがって表示出来るようにします。
        ただしそれぞれのファイル窓で上下スクロールしますので
        その時は境界でズレる事になります。
        壁紙(1)と壁紙(2)の両方が登録されている場合、壁紙(1)が優先されます。

    「最後に閲覧した画像を保持する」
        最後に閲覧した画像を内部に保持します。
        Ｇキーでいつでも再表示する事が出来ます。

    「Susie Plug-in にファイルアクセスを任せる」
        Susie Plug-in 使用時にファイル読込を【あふｗ】が行わず、
        Plug-in に任せるようにします。
        環境によってはこちらの方が高速に動作する場合もあります。

    「フルスクリーン時にマウスカーソルを消す」
        内蔵画像ビュアにてフルスクリーン表示へ切り替えた際、マウスカーソルを
        非表示にします。 マウスを一度クリックすると表示されます。

  以下 ■ のついたものはトラブル回避用です。
  通常チェックする必要はありませんが、不具合のある場合に適用すると
  改善する事もあります。

    「■内蔵画像ビュアで DDB を優先する」
        内蔵画像ビュアでまず DDB で表示を試みます。
        画像表示が異様に遅い場合チェックすると改善する事があります。

    「■Susie Plug-in の拡張子判別実行の自動設定を無効にする」
        起動時に自動的に Susie Plug-in の情報を読み取って
        Plug-in が対応している拡張子は自動的に拡張子判別実行で表示する
        機能を無効にします。

        一部の Plug-in で、存在すると【あふｗ】の起動時にエラーが出るものが
        ありますのでその場合にチェックしてみてください。
          →  たけちん氏の純正 Plug-in では問題のない事を確認しています。

        この場合内部画像表示で使用したい Plug-in は拡張子判別実行の
        『&SUSIE』を用いて自分で指定する必要があります。
        自分で指定する場合でも『Susie Plug-in の存在するフォルダ』は
        指定しておいてください。

    「■展開・圧縮進捗ダイアログを全て表示する」
        書庫の展開・圧縮時の進捗ダイアログを全ての DLL で強制的に
        表示します。
        未チェックの場合、DLL 毎に適切な設定で表示・非表示を切り替えます。

    「■展開・圧縮進捗ダイアログは全て強制非表示（上項目OFF時有効）」
        上の項目が未チェック時に、書庫の展開・圧縮時の進捗ダイアログを
        全て強制的に非表示にします。

    「■ファイル窓構築・ソートのキャンセルを無効化する」
        ファイル窓構築中とソート中のキャンセルチェックを省略します。
        当然キャンセルが効かなくなりますが、裏で CPU 使用率が 100% 近い
        タスクが存在した場合の【あふｗ】の動作速度低化を防ぎます。

    「■あふｗ終了時の設定保存に失敗してもエラー報告しない」
        【あふｗ】を終了する時、設定の保存に失敗してもエラーメッセージを
        表示しません。
        CD-R/DVD-R 等の読込専用メディアから起動して使用する場合や
        設定ファイルを読込専用属性にして、設定や履歴を不変にする
        場合等に有効です。

    「■ファイル名制限をエクスプローラ相当にする」
        扱えるファイル名をエクスプローラ相当に制限します。
        ( API へ渡すファイル名に \\?\ を付加しません )

    「■インテルビデオチップの描画乱れ対策を有効」
        Win7 + Intel ビデオチップの組み合わせで発生する
        メッセージ窓の描画乱れに対応します。

    「■ファイルの複写と移動時にバッファリングする」
        サーバー(主にマイクロソフト製)利用時に複写等がうまく動作しない
        場合、チェックを入れると改善する事があります。


----------------------------------------------------------------------------
                           「各種設定(2)」タブ
----------------------------------------------------------------------------
    「SHIFT,CTRL,ALT + カーソルキーの設定」
        それぞれ割り当てたい動作を指定してください。

    「マーク無しファイル操作」
        複写・移動・削除するキーを押した時にマークが無かった場合の動作を
        指定します。
          ・何もしない
                ・・・・・何もしません。
          ・マークする
                ・・・・・カーソル位置のファイルをマークします。
          ・即操作する
                ・・・・・カーソル位置のファイルを即操作します。
                          ２画面ファイラの特徴上、絶対に誤操作しない自信の
                          ある方以外へはお勧めしません。

    「サムネイル枠」
        画像サムネイル表示時の枠の描画状態を指定します。

    「サムネイルサイズ自動調整」
        サムネイルサイズを列内に収まるよう自動的に縮小調整します。
        これが有効な場合、サムネイルサイズの変更キーは一列表示モード時
        のみ有効で、サムネイルの最大サイズを指定する事になります。

    「サムネイルキャッシュを保存」
        シェルのプレビューによるサムネイルキャッシュを保存します。
        Vista 以降の OS で有効です。

    「ホットキー」
        指定したキーで【あふｗ】をアクティブ化出来ます。
        ALT+CTRL+英数字が指定可能です。
        （指定はこのエディットボックス内において該当英数字のみ入力で可）
        複数起動された【あふｗ】では最初に起動された【あふｗ】のみ有効です。

    「画像ビュア表示場所(左)」
        カーソルが左ファイル窓にある時のデフォルト画像表示場所を
        指定します。

    「画像ビュア表示場所(右)」
        カーソルが右ファイル窓にある時のデフォルト画像表示場所を
        指定します。

        画像表示場所は内蔵画像ビュア中にＭキーで切り替えられます。
        切り替えた後も【あふｗ】を起動している間は設定を保持しますが、
        【あふｗ】を再起動したり【あふｗ】の設定を起動すると上記設定場所に
        戻ります。

    「フルスクリーン(左)」
        カーソルが左ファイル窓にある時に画像表示する際は、必ず
        フルスクリーンモードに切り替えます。

    「フルスクリーン(右)」
        カーソルが右ファイル窓にある時に画像表示する際は、必ず
        フルスクリーンモードに切り替えます。

    「管理者表示」
        管理者権限で【あふｗ】が起動された時のタイトルバー表示方法を
        指定します。 Vista 以降の OS で有効です。

    「タイムスタンプ許容誤差」
        上書き複写や移動時と、同名ファイル比較マーク時のそれぞれに
        対して、同一タイムスタンプであるとみなすタイムスタンプの誤差を
        ミリ秒単位で指定出来ます。
        異なるファイルシステム間のタイムスタンプ誤差を吸収します。

    「操作前確認」
        チェックした項目の動作の前に確認のウィンドウが出るようになります。
        『レジ使用』はレジストリに書き込む可能性のある操作です。

        複写と移動と展開については、チェックをグレイ状態にすると確認の
        代わりにそれぞれ複写先・移動先・展開先を直接指定するモードに
        なります。
        直接指定する場合、絶対パス（フルパス）で記述するとそのパスに、
        相対パスで記述すると『現在のパス』からの相対パスとなります。

        従って『..』と指定した場合、複写（移動・展開）対象ファイルの
        あるパスの親フォルダが複写（移動・展開）先となります。


----------------------------------------------------------------------------
                           「各種設定(3)」タブ
----------------------------------------------------------------------------
    「ファイル窓の枠の厚さ」
        左右のファイル窓の『枠』の厚さです。
        お好みの厚さを設定してください。 0 で非表示です。
        非表示から 1 以上の値へ変更した直後は、一度他ファイル窓に
        カーソルを移動すると反映されます。

    「ファイル窓のカーソルの太さ」
        ファイル窓のカーソルの太さを設定します。
        文字サイズより大きくした場合は丁度文字のサイズになります。

    「画像ビュアのスクロール量」
        内蔵画像ビュアでカーソルキーを押した時にスクロールする値を
        設定します。 (+SHIFT) は SHIFT+カーソルキー を押した時に
        スクロールする値を設定します。

    「ソートダイアログの初期カーソル位置」
        ソートダイアログの初期カーソル位置を指定します。

    「分離して表示する拡張子文字数」
        拡張子の文字数がこの数字以内の場合は分離して揃えて表示します。
        0 に設定すると全て拡張子を分離せずに表示します。

    「ファイル分割等時最大バッファ量」
        ファイルの分割と結合時に確保するバッファのサイズを指定します。
        有効範囲は 1 〜 99999（Kbytes）です。

    「一括テキスト編集」
        マークがあった場合のエディタを開く動作を指定します。
        （Ｅキー と SHIFT+ENTERキー）
        書庫の仮想フォルダではカーソル位置のファイルのみ編集になります。

          しない ・・・ 常にカーソル位置のファイルを編集します。
            並列 ・・・ マークファイルを一括してエディタに渡します。
            直列 ・・・ マークファイルを１ファイルずつ順次エディタに
                        渡します。

    「警告ファイル数」
        一括テキスト編集時、指定以上数のマークがあった場合に
        確認ダイアログを出します。 0 を指定すると一切警告しません。

    「タイトル表示を抑制する拡張子」
        チェックした拡張子のタイトル取得を抑制します。

    「ステータスバー表示はHDDのみ」
        ステータスバーへのタイトル表示は HDD 上のファイルのみを
        対象とします。
        ファイル窓へのタイトル一覧表示はこの設定に拘らず、どの
        ドライブでも可能です。

    「壁紙『っぽい』色」
        壁紙の色を操作します。
        99 以下では黒っぽい色に、101 以上では白っぽい色になります。

    「フォルダ監視遅延時間」
        指定した時間 (ms) の間の連続した変更は、変更が終了するまで
        待った後ファイル窓を更新します。
        0 を指定した場合、ファイル窓の自動更新は無効になります。

    「■ samba 不具合対策を有効」
        samba のバージョンによっては、アイコン取得を行っただけで
        変更シグナルが来てしまうため「アイコン表示設定でネットワーク
        ドライブ閲覧時」のファイル窓の自動更新方法を調整します。

        チェックすると、自動更新を完全に無効化します。
        グレイ状態にすると、サーバからの「ファイル最終更新の変更シグナル」
        のみを無視します。
        ネットワークドライブを表示した際、勝手にファイル窓の更新が延々と
        続いてしまう時に適用して下さい。

    「集中複写・移動時の区切り文字」
        『相対パス名付き』集中複写・移動の時、パス区切りで
        ある \ を置換するデフォルト文字列を指定します。

    「『Ready.』表示」
        ステータスバーやメッセージ窓に表示される『Ready.』の表示を
        変更します。
        何も指定しない場合は『Ready.』です。


----------------------------------------------------------------------------
                            「フォント(4)」タブ
----------------------------------------------------------------------------
    それぞれの項目のボタンでフォント選択ダイアログが表示され、それぞれ
    設定出来ます。
    ただしフォントの『スタイル』は設定出来ません。

    基本的に『True Type』の『等幅』フォントの使用が前提です。
    『プロポーショナル』フォントは正しく表示されない個所があります。

    「ファイル窓の描画方法」
        ファイル窓の文字を表示する方法を指定します。
        0 を除いて、数字が小さいほど描画速度は速くなります。
        数字が大きいほど描画(幅)精度は高くなります。（合成文字を除く）

      0: 自動
          OS によってそれぞれのデフォルト設定となります。
          ただしデフォルト設定が最適であるとは限りません。
          特に WinXP でシステムの描画能力が低い場合は 1 か 2 を
          選択して下さい。
      1: DrawText   一括
          Vista でのデフォルト設定です。
          合成文字は正しく表示されます。
          厳密ではない等幅フォント（IPA等）や一部ユニコード文字は
          描画幅が正しくない事があります。
      2: ExtTextOut 一括
          Win7 でのデフォルト設定です。
          環境が揃っていれば合成文字は正しく表示されますが、直後位置に
          余分なスペースが入ります。
          Win7 より前の OS では、フォントによって一部ユニコード文字が
          化ける事があります。（システムのフォントリンクがうまく働かない）
      3: DrawText   個別
          WinXP でのデフォルト設定です。
          合成文字は分解されて表示されます。
          システムの描画速度が十分でない場合は表示がチラついたりします。


----------------------------------------------------------------------------
                             「表示色(5)」タブ
----------------------------------------------------------------------------
    それぞれの項目のボタンでカラー選択ダイアログが表示され、それぞれ
    設定出来ます。

    フォルダの場合、通常は属性の指定色が優先されますが
      『フォルダは属性に関係無く指定色』
    にチェックを入れるとフォルダの表示色はどんな属性の場合でも
    フォルダの指定色で表示します。

----------------------------------------------------------------------------
                           「プログラム(6)」タブ
----------------------------------------------------------------------------
    「エディタ」
        使用するエディタを指定します。

    「要新規」
        新規テキストの編集時に予め空ファイルを作成します。

    「内蔵ビュアから起動する引数」
        簡易内蔵テキストビュアからＥキーや SHIFT+ENTERキー でエディタを
        起動する時の引数を指定します。
        『自動』ボタンを押すとデータベースに存在するエディタであれば
        自動的に設定されます。
        使用出来る置換マクロは
            $P ... 閲覧しているテキストファイルのパス
            $F ... 閲覧しているテキストファイルのファイル名
            $T ... 閲覧している先頭行（数字）
            $C ... 閲覧している中央行（数字）
        です。

    「外部ビュア」
        外部テキストビュアを使用する場合に指定します。

    「Susie Plug-in の存在するフォルダ」
        Susie Plug-in の存在するフォルダをフルパスで指定します。
        画像ビューワ Susie の設定がしてある場合は『自動』ボタンを押すと
        自動的にパスを取得します。

        また AtoB Converter の出力 Plug-in（*.xpi）は、このフォルダの
        下の exp_plug フォルダ内に置くと【あふｗ】で認識されます。

    「テンポラリフォルダ」
        書庫の仮想フォルダを使用する場合やレスポンスファイルを用いた
        圧縮を実行する場合、ここをテンポラリとして使用します。
        指定されない場合【あふｗ】の起動パスを使用します。

 !!! 注意 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        実際にはこのフォルダに AFXWTEMP.? というフォルダを作成して
        その中をテンポラリとして使用します。（"?"は数字）
        この AFXWTEMP.? フォルダは【あふｗ】終了時、又は【あふｗ】設定
        時に削除されますので注意してください。
 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    「migemo一式フォルダ」
        C/Migemo 一式
            migemo.dll
            dict\migemo-dict
            dict\han2zen.dat
            dict\hira2kata.dat
            dict\roma2hira.dat
        を置くフォルダを指定します。
        指定されない場合【あふｗ】の起動パスを探します。

    「ファイルの実行コマンドライン」
        X, SHIFT+X それぞれチェックを入れると、その右の欄にキー定義と
        同様な書式で動作を指定出来ます。

    上記それぞれ『参照』ボタンをクリックすると、ダイアログを用いて
    プログラムやフォルダを選択出来ます。

    また %env% の形式で記述されたものはエディタの引数指定を除いて
    【あふｗ】起動時にその環境変数の内容に置き換えられます。

    %afx% もしくは %afxw%（全て小文字の場合）は【あふｗ】の起動パスに
    置き換えられます。（パス末尾の \ は付きません）
    ただし %Afx% や %Afxw% 等、１文字でも大文字が混じった場合は
    環境変数 AFX AFXW の内容に置き換えられます。

    %% は % に置き換えられます。

----------------------------------------------------------------------------
                        「拡張子判別実行(7)」タブ
----------------------------------------------------------------------------
    左上側に登録されている拡張子が表示されます。

     +-----------------------------------------------------------------+
     ! 拡張子の指定にピリオド（.）は不要です。                         !
     ! 拡張子の指定はスペースで区切って複数指定する事が出来ます。      !
     +-----------------------------------------------------------------+

    ・新規・・・新たに拡張子の登録をします。
    ・変更・・・登録されている拡張子を変更します。
    ・削除・・・登録されている拡張子を削除します。

    下側の部分で拡張子に対応した ENTERキー 又は SHIFT+ENTERキー を
    押した時の動作（コマンドライン）を指定します。

      その右の『参照』ボタンをクリックするとダイアログでファイル名を
      指定出来ます。
      コマンドラインで、カーソル位置や範囲選択が指定されていない時に
      参照ボタンでファイル名を指定すると、カーソル位置のファイルを
      コマンドラインで与える実行プログラムと見なして自動的に後ろに
      "$P\$F"（カーソル位置のフルパスファイル名）がセットされます。
      空白を含むファイル名対策としてファイル名は "" で括る方が安全です。

    動作の部分を空欄にした場合、また指定されていない拡張子のものは
    それぞれビュア（ENTER）又はエディタ（SHIFT+ENTER）が起動されます。
    （Susie Plug-in が有効で対応している拡張子のものは画像表示）

    全部で 50 種類の拡張子判別実行を登録出来ます。

    拡張子に <DIR> と指定すると、フォルダ上にカーソルがあった場合の
    SHIFT+ENTERキー 動作のみを定義出来ます。

    拡張子判別実行では基本的に実行後にカーソルを下げますが『各種設定(1)』
    でデフォルトの動作を変更出来ます。

    各コマンドラインは、自ファイル窓のパスをカレントフォルダとして
    実行されます。
    ただし内部命令 &exec や &open は、指定されたファイルのある
    フォルダをカレントフォルダとして実行します。

    コマンドラインの指定には以下の置換マクロが指定出来ます。

      $$  .....  $ を表します。

      $F  .....  カーソル位置のファイル名。
      $W  .....  カーソル位置の拡張子を除いたファイル名。
      $E  .....  カーソル位置のファイル名の拡張子。

      $P  .....  自ファイル窓のパス名。（末尾に \ は付きません）
      $O  .....  他ファイル窓   〃   。（         〃          ）
      $L  .....  左ファイル窓   〃   。（         〃          ）
      $R  .....  右ファイル窓   〃   。（         〃          ）

                   上記を $f $w $p $o $l $r のように小文字で記述すると
                   ショートファイルネームになります。
                   ショートファイルネームが得られなかった場合は
                   大文字で記述した時と同様の動作になります。

                   カーソルが ..（親フォルダ）を指している時
                   ファイル名は .（自フォルダ）を返します。

      $SP .....  自ファイル窓のソート状態。
      $SO .....  他ファイル窓     〃     。
      $SL .....  左ファイル窓     〃     。
      $SR .....  右ファイル窓     〃     。

      $MS .....  マークされたファイル名を並べます。（ファイル名のみ）
      $MF .....  マークされたファイル名を並べます。      （フルパス）
                 上記２つはマークがない場合、カーソル位置のファイル
                 １つを対象とします。
      $MO .....  他方のマークされたファイル名を並べます。（フルパス）
                 他方にマークがない場合…
                   ・$ の次の M を大文字で記述した時（$MO）は
                     コマンド自体がキャンセルになります。
                   ・$ の次の m を小文字で記述した時（$mO）は
                     ヌル文字に置き換わります。
      $ML .....  左ファイル窓のマークされたファイル名を並べます。
      $MR .....  右ファイル窓のマークされたファイル名を並べます。
                 上記２つは $MO の動作にほぼ準じます。

                 マークファイル名はそれぞれダブルクォートで括られます。
                 括りたくない場合は $QN の説明を参照してください。

                 上記を $Mf $Ms $Mo $Ml $Mr のように M の次の文字を
                 小文字で記述すると、ショートファイルネームになります。
                 その場合はダブルクォートで括られません。

                 仮想フォルダ内で $M? を使用した場合、それぞれの
                 実体は生成されませんので各ファイル自体は扱えません。
                 また $MF, $MO, $ML, $MR もファイル名のみを返します。

      $*P .....  自ファイル窓のマスク文字列。
      $*O .....  他ファイル窓      〃      。
      $*L .....  左ファイル窓      〃      。
      $*R .....  右ファイル窓      〃      。

      $I?"mes"
          .....  入力ボックスを開きます。
                   ? ..... 入力ボックスの幅を指定します。
                           １桁の数字で x100 pixel です。（0 = 10）
                           省略可能で、その場合は 4 となります。
                   mes ... 入力ボックスのタイトルを指定します。

      $IT"text"
          .....  入力ボックスに予め表示される内容を指定します。

       例)
          notepad "$I5"編集テキストファイル名""
          cmd /c copy $IT"$P\$F""$I"コピーするファイル"" $IT"""$I3"どこへ""

           上記の下の例では入力ボックスが２回開きます。
           入力ボックスをキャンセル、又は何も入力しなかった場合は
           コマンド自体がキャンセルとなります。

      $MN"file"
          .....  内部命令 &MENU と同じメニューを表示して、メニューから
                 選択した文字列に置き換わります。
                 メニューファイルについては &MENU の解説を御覧ください。

      $MT"title"
          .....  $MN で表示するメニュータイトルを指定します。
                 メニュー定義ファイルに記されているタイトルよりも
                 こちらが優先されます。

      $MP"file"
          .....  内部命令 &PMENU と同じポップアップメニューを表示して、
                 メニューから選択した文字列に置き換わります。
                 メニューファイルについては &PMENU の解説を御覧ください。

      $V"env"
          .....  実行時点での環境変数 env に置き換えられます。

                 環境変数部分に全部小文字で afx もしくは afxw と指定すると
                 【あふｗ】の起動パスを得る事が出来ます。（末尾 \ 無し）
                 この場合１文字でも大文字が混じった場合は、それぞれ
                 環境変数 AFX AFXW の内容に置き換えられます。

      $~  .....  $V"afxw" と同じです。

      $#??
          .....  ?? の部分に16進数の数字を記述して、そのまま ASCII 文字
                 コードとして置き換えられます。
                 数字部分は必ず２桁で指定する必要があります。

      $0 〜 $9
          .....  変数（0〜9）に入っている文字列に置き換えられます。
                 代入は内部命令 &SET で行います。

      $"  .....  ダブルクォート文字自体に置き換えられます。

    以下は各種制御用の置換マクロです。これら自体は文字列として何にも
    置き換えられません。コマンドライン上では何も無いものとして扱われます。
    (上の $IT と $MT も同様)

      $K  .....  記述した位置にキャレットをセットしてキー入力ウインドウを
                 開きます。
                 また $IT 内で使用して、入力ボックスのキャレット制御として
                 使用出来ます。
                 更に $k と小文字で記述した置換マクロを置くと、$k と $K に
                 挟まれた間の文字を選択状態にします。

                   基本的に $K 側にキャレットを置きますが、選択範囲が
                   256bytes を超えた場合は無条件で後方にキャレットを置きます。

      $N  .....  各コマンド実行後にファイル窓のカーソルを下げません。
      $D  .....  各コマンド実行後にファイル窓のカーソルを下げます。

      $CP .....  各コマンド実行後に自ファイル窓のマークをクリアします。
      $CO .....         〃         他ファイル窓           〃         。
      $CL .....         〃         左ファイル窓           〃         。
      $CR .....         〃         右ファイル窓           〃         。
      $CA .....         〃         両ファイル窓           〃         。

      $J? .....  マーク展開マクロでマークファイルを並べる際の
                 区切り文字や、マスク文字マクロの区切り文字を
                 $J に続けて１文字指定します。
                 マーク展開マクロ・マスク文字マクロよりも前であれば
                 どこに記述しても構いません。
                    例：$J+$MS → "file1"+"file2"+"file3"
                        $J;$MS → "file1";"file2";"file3"
                 特に指定しなかった場合はスペース区切りとなります。

                 また指定された文字によっては、下記のコントロール文字が
                 代わりに適用されます。（マーク展開マクロ時のみ）
                     D ...  DOS 改行（0Dh0Ah）
                     U ... UNIX 改行（0Ah）
                     M ...  MAC 改行（0Dh）
                     T ...  タブ文字（09h）

      $QN .....  マーク展開マクロより前に記述すると各ファイル名が
                 ダブルクォートで括られなくなります。
      $QS .....  マーク展開マクロより前に記述すると各ファイル名が
                 シングルクォートで括られるようになります。
      $QD .....  マーク展開マクロより前に記述すると各ファイル名が
                 ダブルクォートで括られるようになります。(デフォルト)

      $X  .....  コンテキストメニューを出すべきＸ座標。
                 大文字で記述すると内部コンテキストメニューと同じく
                 マークが無い時は左端、マークがある時は左端よりも
                 若干右寄りで、小文字で記述すると常に左端となります。

      $Y  .....  コンテキストメニューを出すべきＹ座標。

    拡張子判別実行の動作指定の部分に以下の内部命令を記述する事によって
    各機能を使用出来ます。

      &NOP               .....  何もしません。

      &RELOAD (param)    .....  (param) で指定したファイル窓を再読込します。
                                (param) は続けて複数記述出来ます。大文字で
                                記述するとマーククリア、小文字で記述すると
                                マークを保持します。
                                (param) を省略すると P が指定された事に
                                なります。
                                  P : 自ファイル窓
                                  O : 他ファイル窓
                                  L : 左ファイル窓
                                  R : 右ファイル窓

      &EXEC (file)       .....  シェル（Explorer）の関連付けの設定に
                                従って (file) を実行します。
                                (file) を省略すると対象はカーソル位置の
                                ファイル名になります。
                                また、自ファイル窓のパスをカレントフォルダ
                                として設定する事なくファイルを実行する目的
                                にも有効です。

      &OPEN (param)      .....  シェル（Explorer）の関連付けの設定に
                                従って (param) を開きます。
                                (param) を省略すると対象はカーソル位置の
                                ファイル名になります。

      &CLOSE [file]      .....  [file]（フルパスファイル名）で起動された
                                トップレベルウィンドウを閉じます。
                                （≒終了させます）
                                複数起動されていた場合は最初に発見した
                                ウインドウを閉じます。

      &WAVPLAY           .....  音ファイル（*.WAV）を再生します。
                                再生可能ファイルサイズ上限は 32MB です。
      &WAVSTOP           .....  WAV の再生を停止します。

      &CONTEXT (file)    .....  (file) のコンテキストメニューを表示します。
                                （ = エクスプローラの右クリックメニュー）
                                何も指定しない場合、マークがある場合は
                                マークファイルの、マークが無い場合は
                                カーソル位置のファイルのコンテキスト
                                メニューを表示します。
                                ただしカーソルが『..』（親フォルダ）を
                                指している場合は、現在表示しているパスの
                                コンテキストメニューを表示します。

      &EXTRACT (-R)      .....  統合アーカイバプロジェクトの DLL を使用して
                                書庫を展開します。
                                後ろに引数 -R を指定すると、各種設定１の
                                『書庫展開はフォルダを作成してその中へ』設定と
                                逆の動作になります。

      &V_ARC             .....  統合アーカイバプロジェクトの DLL を使用して
                                書庫を仮想フォルダとして表示します。

      &SUSIE [Plug-in]   .....  Susie Plug-in を使用して内部で画像を表示
                                します。

                                通常は対応拡張子のものは自動的に拡張子判別で
                                表示されるようになっていますので設定する
                                必要はありません。

                                同じ拡張子の対応プラグインが複数ある場合に
                                プラグイン名を指定した場合、そのプラグインを
                                優先的に使用して展開を試みます。

                                プラグインが持っている拡張子情報以外の
                                ものを表示する場合にも使用します。
                                    例） RLE       &SUSIE IFBMP.SPI

      &S_ARC [Plug-in]   .....  Susie Plug-in を使用して書庫を仮想フォルダと
                                して表示します。

                [Plug-in] は『ファイル名のみ』を指定します。
                 Plug-in のパスは『プログラム(6)』で指定した
               『Susie Plug-in が存在するフォルダ』を検索します。

      &CD [path]         .....  表示パスを [path] に変更します。
                                [path] は下記の方法でカレント移動する場合
                                以外はフルパスで記述します。
                                『&CD C:』『&CD D:』 等ドライブ名のみ
                                記述した場合は、そのドライブのカレント
                                フォルダに変更します。

      &EXCD [parameter]  .....  表示パスを [parameter] に従って変更します。
                                 -L"path" : 左ファイル窓のパス
                                 -R"path" : 右ファイル窓のパス
                                 -P"path" : 自ファイル窓のパス
                                 -O"path" : 他ファイル窓のパス

                                それぞれ『パス』の代わりに『フルパス
                                ファイル（フォルダ）名』を指定すると
                                そのファイル（フォルダ）が存在するパスに
                                変更した上でそのファイル（フォルダ）に
                                カーソルを合わせます。
                                （フォルダ名の場合は末尾に \ を付けない）

                                フォルダ指定時、そのフォルダにカーソルを
                                合わせるのではなく、そのフォルダ内を
                                表示したい場合はフォルダ名末尾に \ を必ず
                                付加するか、又はパラメータ文字を小文字で
                                指定してください。（-l -r -p -o）

                                同時にファイルマスクも指定出来ます。
                                 -*L"*.*" : 左ファイル窓のマスク
                                 -*R"*.*" : 右ファイル窓のマスク
                                 -*P"*.*" : 自ファイル窓のマスク
                                 -*O"*.*" : 他ファイル窓のマスク

                                同時にソート状態も指定出来ます。
                                指定する文字列は &SORT の [switch] と
                                同じです。
                                 -SL"F+" : 左ファイル窓のソート状態
                                 -SR"F+" : 右ファイル窓のソート状態
                                 -SP"F+" : 自ファイル窓のソート状態
                                 -SO"F+" : 他ファイル窓のソート状態

      &MASK [mask]       .....  ファイルマスクを [mask] に変更します。
                                    例) &MASK *.$E
                                        現在のカーソル位置の拡張子と
                                        同じファイル名のみ表示します。

      &MARK (switch) [mask]
                         .....  [mask] にマッチするファイル名のマークを
                                (switch) に従って操作します。
                                (switch) は下記のものをハイフンに続けて複数
                                記述出来ます。
                                  D : フォルダのみを対象
                                  F : ファイルのみを対象
                                  U : 該当するもののマークを解除する
                                  ! : 該当するもののマークを反転する

                                    例) &MARK -F! *.TXT

                                (switch) を省略すると、フォルダとファイル両方を
                                対象としてマッチしたものをマークします。

                                [mask] はワイルドカードに加えて、m/ で記述開始
                                する事により正規表現での指定が可能です。
                                （正規表現の使用は 要：bregonig.dll 2.x）

      &SORT [switch]     .....  [switch] に従ってソートを変更します。
                                [switch] は下記のものを複数続けて
                                記述出来ます。
                                タイプ・昇降順に関して指定されなかった
                                ものは現在の設定が継続されます。
                                  N : ソート無し
                                  F : ファイル名
                                  E : 拡張子
                                  S : サイズ         （ L でも可）
                                  T : タイムスタンプ （ D でも可）
                                  A : 属性
                                  X : ファイル名(番号)【WinXP以降のみ】
                                  + : 昇順
                                  - : 降順
                                  ! : 昇順降順トグル
                                  > : 次のソートタイプ
                                  < : 前のソートタイプ

      &CLIP [string]     .....  [string] をクリップボードに転送します。
                                    例) &CLIP $P\$F
                                        現在のカーソル位置のフルパス
                                        ファイル名をクリップボードに
                                        転送します。

      &MESCLIP           .....  メッセージ窓の内容を
                                クリップボードに転送します。

      &MESCLR            .....  メッセージ窓の内容をクリアします。

      &MAX               .....  【あふｗ】のウインドウを最大化／元に戻します。
      &MIN               .....  【あふｗ】のウインドウを最小化します。

      &PUSHD             .....  現在のファイル窓のパスをパススタックに
                                積みます。
      &POPD              .....  パススタックから１つパスを取り出して現在の
                                ファイル窓のパスにします。
                                  → スタックの０番目は特別扱いで
                                     常に１番目のスタックの複写を持ち
                                     スタックから外される事はありません。

      &SET (n) (string)  .....  n 番目の変数に文字列 (string) を入れます。
                                （n ← 0〜9 の数字）
                                変数は置換マクロ $0〜$9 で使用出来ます。

                                n だけを指定して (string) を指定しなかった
                                場合は n 番目の変数をクリアします。

                                &SET A と指定した場合は全変数をクリアします。

                                パラメータを一切与えず &SET のみで実行すると
                                変数一覧ウインドウを表示します。

      &COPYTO [path]     .....  [path] に複写します。
      &MOVETO [path]     .....  [path] に移動します。
      &MELTTO [path]     .....  [path] に展開します。
            上記３つは [path] に ! を指定すると直接入力になります。

      &COPYHIS           .....  フォルダ履歴から複写先を選択して複写します。
      &MOVEHIS           .....  フォルダ履歴から移動先を選択して移動します。

      &LDROPTO [file]    .....  マークファイル、又はカーソル位置のファイルを
                                [file] へ左 D&D します。
      &RDROPTO [file]    .....  マークファイル、又はカーソル位置のファイルを
                                [file] へ右 D&D します。
      &WDROPTO (-A) (file)
                         .....  マークファイル、又はカーソル位置のファイルを
                                (file)（フルパスファイル名）で起動された
                                トップレベルウィンドウへ擬似ドロップします。
                                複数起動されていた場合は最初に発見した
                                ウインドウへ擬似ドロップします。
                                SOLEDROP.DLL が利用可能であれば使用します。

                                (file) を省略すると、擬似ドロップが出来そうな
                                ウインドウ一覧から選択出来ます。

                                擬似ドロップ先選択ウインドウについては
                                AFxW.TXT の「擬似ドロップ先選択について」を
                                参照してください。

                                -A を指定すると、ドロップ先へフォーカスを
                                明示的に移します。

      &DIVIDE (num)      .....  ファイルを (num) の数に分割します。
                                (num) を省略した場合は入力ウインドウが
                                開きます。
                                (num) には、小物ツールのファイルの分割と
                                同じものが指定出来ます。
      &CONNECT (file)    .....  マークファイルを結合して (file) に
                                書き出します。
                                (file) を省略した場合は入力ウインドウが
                                開きます。
      &CCTO (switch) (path)
                         .....  集中複写を行います。
      &CMTO (switch) (path)
                         .....  集中移動を行います。
         上記２つは、(switch) に -J を指定すると相対パス名付きの
         集中複写（移動）となります。
         (switch) を省略した場合はファイル名のみの集中複写（移動）と
         なります。
         スイッチ -J に続けて、パス区切り文字の置換文字列を指定出来ます。
         置換文字列を省略した場合、置換文字は "_" となります。

         (path) には集中複写（移動）先のパスを指定します。
         (path) を省略した場合は他ファイル窓を集中複写（移動）先とします。
         (path) に相対パスを指定した場合は自ファイル窓のパスを基準とします。

      &VIEW (file)       .....  (file) を簡易内蔵テキストビュアで開きます。
      &EDIT (file)       .....  (file) をエディタで開きます。
      &PRPTY (file)      .....  (file) のプロパティを開きます。
            上記３つ は (file) が無指定の場合はカーソル位置のファイルが
            対象となります。

      &TOW               .....  他ファイル窓にカーソルを移します。

      &MKS_U             .....  上のマークにカーソルを合わせます。
      &MKS_D             .....  下のマークにカーソルを合わせます。

      &EJECT [drv]       .....  [drv] で指定した文字列の頭文字を
                                ドライブ名としてイジェクトを行います。
                                また [drv] の前に ! を記述すると
                                トレイ等が存在した場合はクローズします。

      &EACH (switch) [command]
                         .....  マークされたそれぞれのファイル上に
                                カーソルがあるものとして順次 [command] を
                                実行します。
                                １つ１つ実行終了を待ちます。
                                [command] に内部命令は使えません。
      &EACHNW (switch) [command]
                         .....  &EACH の終了待ち無し版です。

            &EACH系のスイッチは - から開始して LRPO の４つを指定出来ます。
            スイッチとコマンドの間は１バイトスペースを１つ入れてください。
            スイッチ無指定の場合、明示的に更新は行われません。
                P ... &EACH(NW)実行後、自ファイル窓を更新します。
                O ...       〃         他ファイル窓を    〃    。
                L ...       〃         左ファイル窓を    〃    。
                R ...       〃         右ファイル窓を    〃    。
            例)
               &EACH -O cmd.exe /c copy "$P\$F" "$O\"
                   → &EACHコマンド終了後、必ず他ファイル窓を更新します。
               &EACH -LR converter.exe "$P\$F"
                   → &EACHコマンド終了後、必ず両ファイル窓を更新します。

      &REGREN (switch) [ptn]
                         .....  [ptn] の正規表現（s/ と tr/ を指定可）に
                                従って改名を行います。
                                （要：bregonig.dll 2.x）
                                $ は $$ と記述する必要がある事に注意して
                                ください。
                                (switch) はハイフンに続けて記述します。
                                  D : 単純な確認ダイアログを出す
                                  X : 即改名する
                                  T : 試改名を行う（プレビューのみ）
                                  M : マークが無ければカーソル位置をマーク
                                      （ M のみ他の switch と併用可）

                                   例) &REGREN -DM tr/[AIUEO]/[あいうえお]/

                                M 以外の (switch) を省略した場合は、指定の
                                正規表現がセットされた拡張改名ウインドウを
                                表示します。

      &RELD_RD [prog]    .....  [prog] を実行した後、登録フォルダ定義を
                                読み込み直します。

      &VSPMV [pos]       .....  ファイル窓の境界区切り位置を移動します。
           pos : 0(左端) 〜 50(中央) 〜 100(右端)
                 C ... 中央へ。（テンキーの＋や−と同じ）
                 P ... 自ファイル窓側を目いっぱい広げる。
                 O ... 他ファイル窓側を目いっぱい広げて、カーソルを
                       他ファイル窓へ。
                 L ... 右端に移動して、カーソルを左ファイル窓へ。
                 R ... 左端に移動して、カーソルを右ファイル窓へ。

           pos はスペース区切りで複数指定可能で、実行する毎に次の指定へと
           切り替わります。
           ただしこの場合『同じ位置を表すモノ』を２回以上指定は出来ません。

           又 P O L R は続けて 0〜100 の数字を記述する事が出来、この場合は
           目いっぱい広げずにカーソルが移動する対象側のファイル窓を
           その数字の大きさ(%)にします。

          例) &VSPMV L80
                 → カーソルを左ファイル窓に移して、左ファイル窓を 80% の
                    大きさにする。
              &VSPMV P C
                 → 実行する毎に自ファイル窓を最大化と中央区切りをトグル。
              &VSPMV 0 20 40 60 80 100
                 → 最初に左端、その後実行する毎に 1/5 ずつ境界位置が
                    右へ移動する。右端の次は左端に戻る。

      &HSPMV [lines]     .....  メッセージ窓の表示行数を指定します。
           lines はスペース区切りで複数指定可能で、実行する毎に次の指定へと
           切り替わります。
           ただしこの場合『同じ位置を表すモノ』を２回以上指定は出来ません。

      &SENDKEY [keycode] .....  [keycode] のキーを押して離した状態を
                                シミュレートします。
                                [keycode] は AFXWKEY.TXT に書かれた書式に
                                従って４桁の数字で指定します。
                                AFXW.KEY によってフルキーカスタマイズが
                                行われている場合は、キーのすり替えが有効と
                                なる点に注意して下さい。
                                また、外部からオートメーションサーバにて
                                実行した場合に ALT キーを含む場合は
                                あふｗ のウインドウがアクティブになります。

      &SCRIPT [file] (arg) ...  スクリプトを実行します。
                                (通常x86版のみで利用可)
                                詳しくは AFXWAMS.TXT をご参照下さい。

      &MENU [file]       .....  指定したメニュー定義ファイルに従って
                                実行メニューを開きます。

      &PMENU [file]      .....  指定したメニュー定義ファイルに従って
                                自ファイル窓を親としたポップアップ実行
                                メニューを開きます。

      &ALPHA [alpha]     .....  ウインドウの透明度を指定します。
           alpha : 0(不透明)  1(薄い) 〜 255(濃い)

           alpha はスペース区切りで複数指定可能で、実行する毎に次の指定へと
           切り替わります。
           ただしこの場合『同じ濃さを表すモノ』を２回以上指定は出来ません。

           また +20 や -20 等、相対の濃さを指定出来ます。
           ただしこの場合スペース区切りの複数指定は出来ません。


◎ &MENU 用メニュー定義ファイルの例 ◎
------------------------------------------- ここから
afxw 実験メニュー
"notepadで編集" notepad.exe "$P\$F"
"再読込"        &reload
notepad.exe
;L=$V"afx"\MENU01.TXT
;R=$V"afx"\MENU03.TXT
------------------------------------------- ここまで

    AFxWCFG.EXE にはメニュー定義ファイルを作成する機能はありませんので
    テキストエディタ等で作成してください。
    文字コードは UTF-8 (非 UTF-8N) か SJIS が使用可能です。

    １行目の最初に識別用に afxw と書きます。
    その後ろに文字列を記述するとメニューのタイトルとして表示します。
    何も記述しなければ『実行メニュー』というタイトルになります。

-------------------------------------------
afxw 実験メニュー
-------------------------------------------

    ２行目以降がメニュー内容です。

    最初にメニューに表示する内容を "" で括って記述し、その後ろに
    実行内容を記述します。
    実行内容には内部命令(&〜)・置換マクロ($〜)が使用出来ます。

-------------------------------------------
"notepadで編集" notepad.exe "$P\$F"
"再読込"        &reload
-------------------------------------------

    表示内容と実行内容の間はスペース、タブを 0 文字以上置く事が出来ます。

    表示内容を記述せずにいきなり実行内容を記述すると、表示も実行内容と
    同じになります。

-------------------------------------------
notepad.exe
-------------------------------------------

    １文字目がセミコロンの行は基本的にコメントとみなしますが、下記の
    ように記述した場合は、カーソル左右キーを押した時に開き直す
    他のメニュー定義ファイル指定となります。

-------------------------------------------
;L=(←キーで開くメニューファイル名)
;R=(→キーで開くメニューファイル名)
-------------------------------------------

    この指定はどの行に記述しても構いません。
    指定が無ければ左右キーは何も機能しません。

    &PMENU 用のメニュー定義ファイルは &MENU 用のそれとほぼ同じ仕様ですが
    以下の点が異なります。

       ・メニューのタイトル、;L= と ;R= は無視されます。
       ・表示部分に - とだけ記述するとセパレータになります。
       ・表示部分先頭に ; を記述すると無効項目になります。
       ・表示部分文字列中の & はアクセラレータになります。
       ・メニュー内に &PMENU を記述すると、サブメニューになります。
         サブメニューは表示時に動的生成しますので循環しても大丈夫ですが、
         表示出来る階層は最大で 15 です。
       ・メニュー項目数は最大で 4095 です。

    また &MENU のメニュー内に &PMENU を記述すると、実行メニューを
    親としたポップアップメニューになります。


----------------------------------------------------------------------------
                            「キー定義(8)」タブ
----------------------------------------------------------------------------

    ファンクションキー、テンキーを押した時の動作を定義します。
    内部命令と置換マクロは拡張子判別実行と同じものが使用出来ます。

    左上側に表示されている『キー』を選択して、実行する『コマンド』を
    下の欄に記述します。

    右側中段はファンクションキーの表示定義です。
    それぞれのファンクションキーの表示内容と画面に表示する個数を
    指定します。

    キー定義の実行では基本的にコマンド実行後カーソルを下げません。


----------------------------------------------------------------------------
                            「各種登録(9)」タブ
----------------------------------------------------------------------------

    『登録フォルダ』と『登録ファイルマスク』は、メニューを出した時の
    表示名とその登録する中身を設定します。
    『拡張子別表示色』は、拡張子とその表示色を設定します。

    『サウンド』は、各動作終了時に鳴らすサウンドを設定します。
    『サウンド』の項目部分は固定で、下記の新規・変更・削除は無効です。

        新規 ... 新規に登録を作成します。
                 ここでは
                     メニューの表示名 （フォルダ・ファイルマスク）
                     拡張子           （拡張子別表示色）
                 を指定します。

        変更 ... 選択した表示名、又は拡張子を変更します。

        削除 ... 選択した登録を削除します。

    『登録フォルダ』や『登録ファイルマスク』のメニューの表示名を
        P プログラム
        T テンポラリ
    のようにするとその先頭の文字でメニューサーチが出来ます。

    下部の入力スペースでは上部の登録一覧で選択された
      ・登録フォルダ
      ・ファイルマスク
      ・拡張子別表示色
      ・サウンド
    をそれぞれ設定します。
    下部右のボタンでそれぞれのダイアログを用いて指定出来ます。
    それぞれの詳細は下記を参照してください。

============================================================================
                                                              ■ フォルダ ■
============================================================================
    最大登録数 : 64

    ここで登録したフォルダは下記の機能で使用出来ます。
      ・登録フォルダに変更（Ｊキー）
      ・登録フォルダへ複写（SHIFT+Ｃキー）
      ・登録フォルダへ移動（SHIFT+Ｍキー）

    パス名末尾の \ を忘れぬよう付けてください。

    フォルダ指定部分に ! だけを登録し、それをメニューから選択した場合には
    直接入力指定となります。

============================================================================
                                                        ■ ファイルマスク ■
============================================================================
    最大登録数 : 32

    ファイルマスクの変更（：キー）メニューと
    ワイルドカードマーク（＠キー）メニューで使用します。

    ワイルドカードで指定します。（ * ? 使用可）
    スペース区切りで複数指定可能です。

    マスクの直前に :（コロン）を記述すると、否定の意味（それ以外）に
    なります。
    否定と通常を複数指定した場合、左に記述されたものが優先されます。
      例)
              *.exe *.com
              *.lzh *.zip *.cab *.tar *.r??
              :*.txt

    ワイルドカードマークに限り、m/ で記述開始する事によって
    正規表現での指定が可能です。（要：bregonig.dll 2.x）

    最初の指定の先頭文字がハイフン「-」だった場合は、ワイルドカード
    マークのスイッチであると解釈されます。
    これはファイルマスクでは無視されますので、ハイフンから始まる
    ファイルマスクを最初に記述する事は出来ません。
    ハイフンから始まるファイルマスクを指定する場合は、先頭に
    ハイフンだけのダミーを記述して、その後に指定してください。
      例)
              - -*.mdx -*.pdx

    マスク指定部分に ! だけを登録し、それをメニューから選択した場合には
    直接入力指定となります。

============================================================================
                                                        ■ 拡張子別表示色 ■
============================================================================
    最大登録数 : 32

    ファイル窓で表示する拡張子別の色を指定します。

    拡張子のみを指定します。（ピリオド不要）
    スペース区切りで複数指定可能です。
      例)
              exe com
              lzh zip cab tar rar
              txt

    拡張子を分離して表示する設定になっていなければ機能しません。

============================================================================
                                                              ■ サウンド ■
============================================================================
    各種動作終了時に鳴らす wav ファイルをフルパスファイル名で指定します。

    リストの項目をダブルクリック又は ALT+Ｐキーで試聴出来ます。
    リストの非項目部分をダブルクリック又は ALT+Ｓキーで再生を停止します。

    フルパス wav ファイル名の先頭に ;（セミコロン）を記述すると
    その設定をコメントアウト（無効化）出来ます。

    「エラー」は、複写・移動・削除・展開・圧縮の失敗時に鳴らします。
    未登録の場合はそれぞれの動作完了音が適用されます。

    『あふｗが無フォーカスの場合のみ鳴らす』にチェックを入れると、
    設定されていても【あふｗ】にフォーカスがある場合は音を鳴らしません。


----------------------------------------------------------------------------
                            「内蔵ビュア(0)」タブ
----------------------------------------------------------------------------
    「表示設定」
        使用するフォントと行間指定(0〜16)、各表示色を設定します。
        行番号色・タブ色・改行色の横のチェックボックスで、それぞれの
        表示の有無を設定出来ます。

    「垂直スクロールバーを表示する」
        垂直スクロールバーを表示します。
        非表示設定にした場合は、若干読込速度が向上します。

    「スムーススクロール」
        １行のスクロールをスムースにします。
        ただしビュアの表示面積に比例してマシンパワーが必要です。
        キーを離してもスクロールが続くようでしたらチェックを外して
        使用する事をお勧めします。

    「通常 TAB 文字数 （ 適用する拡張子 ）」
        通常時の TAB の文字数を設定します。

        数字の後ろの部分に拡張子を指定すると、その拡張子のものについては
        読込時には必ず指定の TAB 数で表示します。


----------------------------------------------------------------------------
                                「about」タブ
----------------------------------------------------------------------------
    「オートメーションサーバ」
        同一フォルダに存在する【あふｗ】本体をオートメーションサーバとして
        登録・解除します。

    「スクロール設定」
        リストボックスアニメーションの設定が ON になっていた場合、【あふｗ】
        のファイル窓の最初のスクロールがもたついてしまいます。
        このボタンでリストボックスアニメーションの ON/OFF 設定が
        可能ですが、システム全体に影響します。


● その他 ●

    著作権・配布条件等は AFxW.TXT を参照してください。

[eof]
